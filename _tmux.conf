# Prefix
set -g prefix C-j
# don't use default prefix(C-b)
unbind C-b

# View
set -g status-interval 5
set -g status-left-length 16
set -g status-right-length 50

set -s escape-time 0
set -g window-status-current-attr underscore
set -g default-terminal "screen-256color"

set -g status-bg black
set -g status-fg white
set -g status-attr dim

set -g status-right '#[fg=blue]#(loadavg)#[default] | #[fg=magenta]Mem #(used-mem)%%#[default] | #[fg=red,bold]%y/%m/%d(%a)%H:%M:%S#[default] '
set -g status-right-length 90

set -g message-attr bold
set -g message-fg white
set -g message-bg red

# Option
setw -g utf8 on
setw -g mode-keys vi
setw -g automatic-rename off
set -g mouse-select-pane on
set -g base-index 1

bind i display-panes
bind y copy-mode
bind p paste-buffer

# detach C-d d
unbind C-d
bind C-d detach

# new window C-c c
unbind C-c
bind C-c new-window

# next window C-n
unbind C-n
bind C-n next-window

# previous window C-p
unbind C-p
bind C-p previous-window

# screen like split
unbind |
unbind S
bind | split-window -h
bind S split-window

# walk around panes
unbind Tab
bind Tab select-pane -t :.-
unbind BTab
bind BTab select-pane -t :.+
unbind h
bind h select-pane -L
unbind l
bind l select-pane -R
unbind k
bind k select-pane -U
unbind j
bind j select-pane -D

# choose window C-j
unbind C-j
bind C-j choose-window

set -g default-command "reattach-to-user-namespace -l zsh"

# Use vim keybindings in copy mode
setw -g mode-keys vi
#
# # Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

set-window-option -g mode-mouse on

#vim-powerline
set -g default-terminal "screen-256color"

#http://qiita.com/items/4b6fed00849f8653f9fa
#use clip board in zsh
set-option -g default-command "reattach-to-user-namespace -l zsh"
